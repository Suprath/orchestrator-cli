# FILE: internal/templates/php_laravel/Dockerfile.tmpl

# The PHP version is now a dynamic variable from our detector
ARG PHP_VERSION={{ .LanguageVersion }}

# --- Build Stage ---
FROM composer:2-php${PHP_VERSION} AS vendor
WORKDIR /app
COPY . .
RUN composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

# --- Final Stage ---
FROM php:${PHP_VERSION}-fpm-alpine
WORKDIR /var/www/html

# Install required PHP extensions
RUN apk add --no-cache oniguruma-dev libxml2-dev 
    {{- if eq .DatabaseType "mysql" }}
    mysql-client \
    {{- else if eq .DatabaseType "postgresql" }}
    postgresql-client \
    {{- else if eq .DatabaseType "mongodb" }}
    # MongoDB PHP driver requires pecl, which is more complex for alpine
    # Consider using a base image with it pre-installed or a multi-stage build
    # for pecl extensions. For simplicity, we'll skip direct installation here.
    {{- end }}

RUN docker-php-ext-install mbstring dom pdo \
    {{- if eq .DatabaseType "mysql" }}
    pdo_mysql \
    {{- else if eq .DatabaseType "postgresql" }}
    pdo_pgsql \
    {{- end }}


# Copy application files
COPY . .
# Copy installed vendor dependencies from the build stage
COPY --from=vendor /app/vendor/ /var/www/html/vendor/

# Set correct permissions
RUN chown -R www-data:www-data /var/www/html

# Expose port for PHP-FPM
EXPOSE 9000
CMD ["php-fpm"]